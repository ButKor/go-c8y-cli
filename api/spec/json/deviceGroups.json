{
  "information": {
    "name": "devicegroups",
    "description": "Cumulocity device groups",
    "descriptionLong": "REST endpoint to interact with Cumulocity device groups",
    "link": "https://cumulocity.com/guides/reference/inventory/"
  },
  "endpoints": [
    {
      "name": "getDeviceGroup",
      "description": "Get device group",
      "descriptionLong": "Get a device group\n",
      "method": "GET",
      "path": "inventory/managedObjects/{id}",
      "accept": "application/vnd.com.nsn.cumulocity.customDeviceGroup+json",
      "alias": {
        "go": "get",
        "powershell": "Get-DeviceGroup"
      },
      "examples": {
        "powershell": [
          {
            "description": "Get device group by id",
            "beforeEach": [
              "$group = PSc8y\\New-TestDeviceGroup"
            ],
            "command": "Get-DeviceGroup -Id $group.id",
            "afterEach": [
              "Remove-ManagedObject -Id $group.id"
            ]
          },
          {
            "description": "Get device group by name",
            "beforeEach": [
              "$group = PSc8y\\New-TestDeviceGroup"
            ],
            "command": "Get-DeviceGroup -Id $group.name",
            "afterEach": [
              "Remove-ManagedObject -Id $group.id"
            ]
          }
        ],
        "go": [
          {
            "description": "Get device group by id",
            "command": "c8y devicegroups get --id 12345"
          }
        ]
      },
      "pathParameters": [
        {
          "name": "id",
          "type": "[]devicegroup",
          "pipeline": true,
          "required": true,
          "description": "Device group ID"
        }
      ]
    },
    {
      "name": "updateDeviceGroup",
      "description": "Update device group",
      "descriptionLong": "Update properties of an existing device group, for example name or any other custom properties.\n",
      "method": "PUT",
      "path": "inventory/managedObjects/{id}",
      "accept": "application/vnd.com.nsn.cumulocity.customDeviceGroup+json",
      "alias": {
        "go": "update",
        "powershell": "Update-DeviceGroup"
      },
      "examples": {
        "powershell": [
          {
            "description": "Update device group by id",
            "beforeEach": [
              "$group = PSc8y\\New-TestDeviceGroup"
            ],
            "command": "Update-DeviceGroup -Id $group.id -Name \"MyNewName\"",
            "afterEach": [
              "Remove-ManagedObject -Id $group.id"
            ]
          },
          {
            "description": "Update device group by name",
            "beforeEach": [
              "$group = PSc8y\\New-TestDeviceGroup"
            ],
            "command": "Update-DeviceGroup -Id $group.name -Name \"MyNewName\"",
            "afterEach": [
              "Remove-ManagedObject -Id $group.id"
            ]
          },
          {
            "description": "Update device group custom properties",
            "beforeEach": [
              "$group = PSc8y\\New-TestDeviceGroup"
            ],
            "command": "Update-DeviceGroup -Id $group.name -Data @{ \"myValue\" = @{ value1 = $true } }",
            "afterEach": [
              "Remove-ManagedObject -Id $group.id"
            ]
          }
        ],
        "go": [
          {
            "description": "Update device group by id",
            "command": "c8y devicegroups update --id 12345"
          }
        ]
      },
      "pathParameters": [
        {
          "name": "id",
          "type": "[]devicegroup",
          "pipeline": true,
          "required": true,
          "description": "Device group ID"
        }
      ],
      "body": [
        {
          "name": "name",
          "type": "string",
          "required": false,
          "description": "Device group name"
        },
        {
          "name": "data",
          "type": "json",
          "description": "Additional properties of the inventory."
        }
      ]
    },
    {
      "name": "deleteDeviceGroup",
      "description": "Delete device group",
      "descriptionLong": "Delete an existing device group, and optionally all of it's children\n",
      "method": "DELETE",
      "path": "inventory/managedObjects/{id}",
      "accept": "",
      "alias": {
        "go": "delete",
        "powershell": "Remove-DeviceGroup"
      },
      "examples": {
        "powershell": [
          {
            "description": "Remove device group by id",
            "beforeEach": [
              "$group = PSc8y\\New-TestDeviceGroup"
            ],
            "command": "Remove-DeviceGroup -Id $group.id"
          },
          {
            "description": "Remove device group by name",
            "beforeEach": [
              "$group = PSc8y\\New-TestDeviceGroup"
            ],
            "command": "Remove-DeviceGroup -Id $group.name"
          }
        ],
        "go": [
          {
            "description": "Get device group by id",
            "command": "c8y devicegroups delete --id 12345"
          }
        ]
      },
      "pathParameters": [
        {
          "name": "id",
          "type": "[]devicegroup",
          "pipeline": true,
          "required": true,
          "description": "Device group ID",
          "position": 10
        }
      ],
      "queryParameters": [
        {
          "name": "cascade",
          "type": "boolean",
          "description": "Remove all child devices and child assets will be deleted recursively. By default, the delete operation is propagated to the subgroups only if the deleted object is a group",
          "position": 20
        }
      ]
    },
    {
      "name": "createDeviceGroup",
      "description": "Create device group",
      "descriptionLong": "Create a new device group to logically group one or more devices\n",
      "method": "POST",
      "path": "inventory/managedObjects",
      "accept": "application/vnd.com.nsn.cumulocity.customDeviceGroup+json",
      "alias": {
        "go": "create",
        "powershell": "New-DeviceGroup"
      },
      "examples": {
        "powershell": [
          {
            "description": "Create device group",
            "beforeEach": [
              "$GroupName = PSc8y\\New-RandomString -Prefix \"mygroup\""
            ],
            "command": "New-DeviceGroup -Name $GroupName",
            "afterEach": [
              "Remove-DeviceGroup -Id $GroupName"
            ]
          },
          {
            "description": "Create device group with custom properties",
            "beforeEach": [
              "$GroupName = PSc8y\\New-RandomString -Prefix \"mygroup\""
            ],
            "command": "New-DeviceGroup -Name $GroupName -Data @{ \"myValue\" = @{ value1 = $true } }",
            "afterEach": [
              "Remove-DeviceGroup -Id $GroupName"
            ]
          }
        ],
        "go": [
          {
            "description": "Create device group",
            "command": "c8y devicegroups create --name mygroup"
          },
          {
            "description": "Create device group with custom properties",
            "command": "c8y devicegroups create --name mygroup --data \"custom_value1=1234\""
          }
        ]
      },
      "bodyTemplate": {
        "type": "jsonnet",
        "applyLast": false,
        "template": "{type: 'c8y_DeviceGroup', c8y_IsDeviceGroup: {}}"
      },
      "body": [
        {
          "name": "name",
          "type": "string",
          "required": false,
          "pipeline": true,
          "description": "Device group name"
        },
        {
          "name": "type",
          "description": "Device group type (c8y_DeviceGroup (root folder) or c8y_DeviceSubGroup (sub folder)). Defaults to c8y_DeviceGroup",
          "type": "string",
          "validationSet": [
            "c8y_DeviceGroup",
            "c8y_DeviceSubGroup"
          ]
        },
        {
          "name": "data",
          "type": "json",
          "description": "Custom group properties."
        }
      ],
      "bodyRequiredKeys": [
        "name"
      ]
    }
  ]
}